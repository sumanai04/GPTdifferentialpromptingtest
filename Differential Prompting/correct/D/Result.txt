Waiting for Gemini...
AI: ```python
L = list(map(int, input().split()))
b, e = -1, -1
for i in range(len(L)-1):
    if L[i] != L[i+1]:
        if L[i-1] > L[i] and L[i+1] < L[i]:
            if b != -1 and e != -1:
                b, e = False, False
            else:
                b, e = i, i+1
        elif L[i-1] < L[i] and L[i+1] > L[i]:
            if b != -1 and e != -1:
                b, e = False, False
            else:
                b, e = i, i+1
print("YES" if b and e else "NO")
```
Waiting for Gemini...
AI: ```python
L = [int(x) for x in input().split()]
b, e = 0, 0
win = False
for i in range(1, len(L)):
    if L[i] == L[i - 1]:
        continue
    if L[i - 1] > L[i] and L[i + 1] < L[i]:
        if win:
            if (b == 0 and e == len(L) - 1):
                win = False
        else:
            b, e = i - 1, i + 1
if win != False:
    print("YES")
else:
    print("NO")

```
Reference versions generating end!
Test inputs generation 1:
Waiting for Gemini...
AI: Test input: 3
Test input: 1
Test input: 5 2 1 4 3 4
Test input: 3
1 2 1
Test inputs generation 2:
Waiting for Gemini...
AI: Test input: 3
Test input: 2 1 2
Test input: 5 1 2 3 2 1
Test input: 5 1 2 3 4 5
Test inputs generation 3:
Waiting for Gemini...
AI: Test input: [1]
Test input: [1,2,1]
Test input: [3,1,2]
Test input: [0,1,2,3,4]
Test input: [4,3,2,1,1,1,2,3,4]
Test input: [1,4,6,6,3,1,2,4,6,4,5,1,2]
Test input: [5,4,3,2,1,9,8,4,2,1,2,3,9]
Test inputs generation 4:
Waiting for Gemini...
AI: Test input: [1, 1]
Test input: [1, 2, 3, 4, 5]
Test input: [5, 4, 3, 2, 1]
Test input: [1, 2, 3, 4, 3, 2, 1]
Test input: [1, 2, 3, 2, 1]
Test input: [1, 2, 3, 2, 1, 2]
Test input: [1, 2, 3, 4, 5, 4, 3, 2, 1]
Test input: [1, 2, 2, 2, 3, 4, 5, 4, 3, 2, 1]
Test input: [1, 2, 3, 5, 4, 5, 6, 5, 4, 3, 2, 1]
Test input: [1, 2, 3, 5, 4, 5, 6, 5, 4, 3, 1, 2]
Test input: [1, 2, 3, 5, 4, 5, 6, 5, 4, 3, 2, 1, 2, 3]
Test input: [1, 2, 3, 5, 4, 5, 6, 5, 4, 3, 2, 1, 2, 3, 4]
Test inputs generation 5:
Waiting for Gemini...
AI: Test input: []
Test input: [4, 2, 3, 5, 4]
Test input: [5, 4, 3, 2, 1]
Test input: [3, 4, 5, 4, 3, 4, 5, 4, 3]
Test input: [3, 4, 5, 4, 3, 4, 5, 4, 3, 2]
Test input: [1, 2, 3, 4, 3, 2, 1]
Test inputs generation 6:
Waiting for Gemini...
AI: Test input: 3
Test input: 3 1 2
Test input: 6 4 2 0 1 3
Test input: 7 4 3 2 1 0 6
Test inputs generation 7:
Waiting for Gemini...
AI: Test input:
1
1 2 1
Test input:
1
1 3 1
Test input:
1
30 19 36 6 28 30 29 36 13 11 17 46 36 2 48 48 20 24 9 1 12 13 42 41 11 25 15 10 29 3 38 25 41 19 48 33 32 16 20 49 23 14 35 45 45 21 26
Test input:
2
2 1 2
2 6 4
Test inputs generation 8:
Waiting for Gemini...
AI: Test input: 6
1
1 1
2
1 2
2
1 3
1
4
1 3 2 1
2
2 1
Test inputs generation 9:
Waiting for Gemini...
AI: Test input: 5
10 15 12 11 11 14 16 17 18 17 16 14
Test input: 6
1 2 3 4 3 2 1
Test input: 4
1 1 1 1
Test input: 4
1 2 3 1
Test input: 7
1 2 3 4 3 5 1
Test inputs generation 10:
Waiting for Gemini...
AI: Test input: 6
1 10 10 2 1
Test input: 4
1 10 10 10
Test input: 2
1 10
Test input: 3
1 10 1
Test input: 4
1 10 10 1
Test input: 3
1 2 1
The result of test 1:
No failure-inducing test is found.
End!